// <auto-generated />
using System;
using System.Collections.Generic;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(_12FIIContext))]
    [Migration("20240503091802_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("_1_2_FII.Domain.Entities.Answer", b =>
                {
                    b.Property<Guid>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AnswerAssignmentRespondedId")
                        .HasColumnType("uuid");

                    b.Property<string>("AnswerContent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("AnswerStudentId")
                        .HasColumnType("uuid");

                    b.HasKey("AnswerId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("_1_2_FII.Domain.Entities.Assignment", b =>
                {
                    b.Property<Guid>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<List<Guid>>("AssignmentAnswersId")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.Property<string>("AssignmentCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("AssignmentCourseId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AssignmentProfessorId")
                        .HasColumnType("uuid");

                    b.Property<string>("AssignmentQuestion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AssignmentId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("_1_2_FII.Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CourseDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CourseNrOfCredits")
                        .HasColumnType("integer");

                    b.Property<int>("CourseSemester")
                        .HasColumnType("integer");

                    b.Property<string>("CourseWebsite")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("_1_2_FII.Domain.Entities.Resource", b =>
                {
                    b.Property<Guid>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ResourceCourseId")
                        .HasColumnType("uuid");

                    b.Property<string>("ResourceDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("ResourceFileContent")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("ResourceName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResourcePrerequisites")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResourceType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ResourceId");

                    b.ToTable("Resources");
                });
#pragma warning restore 612, 618
        }
    }
}
